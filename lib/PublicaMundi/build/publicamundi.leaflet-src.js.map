{"version":3,"sources":["../src/lib/leaflet/PublicaMundi.Leaflet.js","../../togeojson/togeojson.js","../src/lib/leaflet/Map.js","../src/lib/leaflet/Layer.WMS.js","../src/lib/leaflet/Layer.WFS.js","../src/lib/leaflet/Layer.Tile.js","../src/lib/leaflet/Layer.KML.js","../src/lib/leaflet/Layer.GeoJson.js"],"names":[],"mappings":"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","file":"publicamundi.leaflet-src.js","sourcesContent":["(function (window, PublicaMundi) {\r\n\t\"use strict\";\r\n\r\n\tif (typeof PublicaMundi === 'undefined') {\r\n\t\treturn;\r\n\t}\r\n\r\n\tPublicaMundi.define('PublicaMundi.Leaflet');\r\n\r\n\tPublicaMundi.Leaflet.Framework = 'leaflet';\r\n\r\n\tPublicaMundi.registerFrameworkResolver(PublicaMundi.Leaflet.Framework, function () {\r\n\t    if ((PublicaMundi.isObject(L)) && (PublicaMundi.isFunction(L.Map))) {\r\n\t        return true;\r\n\t    }\r\n\t    return false;\r\n\t});\r\n\r\n})(window, PublicaMundi);","toGeoJSON = (function() {\n    'use strict';\n\n    var removeSpace = (/\\s*/g),\n        trimSpace = (/^\\s*|\\s*$/g),\n        splitSpace = (/\\s+/);\n    // generate a short, numeric hash of a string\n    function okhash(x) {\n        if (!x || !x.length) return 0;\n        for (var i = 0, h = 0; i < x.length; i++) {\n            h = ((h << 5) - h) + x.charCodeAt(i) | 0;\n        } return h;\n    }\n    // all Y children of X\n    function get(x, y) { return x.getElementsByTagName(y); }\n    function attr(x, y) { return x.getAttribute(y); }\n    function attrf(x, y) { return parseFloat(attr(x, y)); }\n    // one Y child of X, if any, otherwise null\n    function get1(x, y) { var n = get(x, y); return n.length ? n[0] : null; }\n    // https://developer.mozilla.org/en-US/docs/Web/API/Node.normalize\n    function norm(el) { if (el.normalize) { el.normalize(); } return el; }\n    // cast array x into numbers\n    function numarray(x) {\n        for (var j = 0, o = []; j < x.length; j++) o[j] = parseFloat(x[j]);\n        return o;\n    }\n    function clean(x) {\n        var o = {};\n        for (var i in x) if (x[i]) o[i] = x[i];\n        return o;\n    }\n    // get the content of a text node, if any\n    function nodeVal(x) {\n        if (x) { norm(x); }\n        return (x && x.firstChild && x.firstChild.nodeValue) || '';\n    }\n    // get one coordinate from a coordinate array, if any\n    function coord1(v) { return numarray(v.replace(removeSpace, '').split(',')); }\n    // get all coordinates from a coordinate array as [[],[]]\n    function coord(v) {\n        var coords = v.replace(trimSpace, '').split(splitSpace),\n            o = [];\n        for (var i = 0; i < coords.length; i++) {\n            o.push(coord1(coords[i]));\n        }\n        return o;\n    }\n    function coordPair(x) {\n        var ll = [attrf(x, 'lon'), attrf(x, 'lat')],\n            ele = get1(x, 'ele');\n        if (ele) ll.push(parseFloat(nodeVal(ele)));\n        return ll;\n    }\n\n    // create a new feature collection parent object\n    function fc() {\n        return {\n            type: 'FeatureCollection',\n            features: []\n        };\n    }\n\n    var serializer;\n    if (typeof XMLSerializer !== 'undefined') {\n        serializer = new XMLSerializer();\n    // only require xmldom in a node environment\n    } else if (typeof exports === 'object' && typeof process === 'object' && !process.browser) {\n        serializer = new (require('xmldom').XMLSerializer)();\n    }\n    function xml2str(str) { return serializer.serializeToString(str); }\n\n    var t = {\n        kml: function(doc) {\n\n            var gj = fc(),\n                // styleindex keeps track of hashed styles in order to match features\n                styleIndex = {},\n                // atomic geospatial types supported by KML - MultiGeometry is\n                // handled separately\n                geotypes = ['Polygon', 'LineString', 'Point', 'Track', 'gx:Track'],\n                // all root placemarks in the file\n                placemarks = get(doc, 'Placemark'),\n                styles = get(doc, 'Style');\n\n            for (var k = 0; k < styles.length; k++) {\n                styleIndex['#' + attr(styles[k], 'id')] = okhash(xml2str(styles[k])).toString(16);\n            }\n            for (var j = 0; j < placemarks.length; j++) {\n                gj.features = gj.features.concat(getPlacemark(placemarks[j]));\n            }\n            function kmlColor(v) {\n                var color, opacity;\n                v = v || \"\";\n                if (v.substr(0, 1) === \"#\") v = v.substr(1);\n                if (v.length === 6 || v.length === 3) color = v;\n                if (v.length === 8) {\n                    opacity = parseInt(v.substr(0, 2), 16) / 255;\n                    color = v.substr(2);\n                }\n                return [color, isNaN(opacity) ? undefined : opacity];\n            }\n            function gxCoord(v) { return numarray(v.split(' ')); }\n            function gxCoords(root) {\n                var elems = get(root, 'coord', 'gx'), coords = [];\n                if (elems.length === 0) elems = get(root, 'gx:coord');\n                for (var i = 0; i < elems.length; i++) coords.push(gxCoord(nodeVal(elems[i])));\n                return coords;\n            }\n            function getGeometry(root) {\n                var geomNode, geomNodes, i, j, k, geoms = [];\n                if (get1(root, 'MultiGeometry')) return getGeometry(get1(root, 'MultiGeometry'));\n                if (get1(root, 'MultiTrack')) return getGeometry(get1(root, 'MultiTrack'));\n                if (get1(root, 'gx:MultiTrack')) return getGeometry(get1(root, 'gx:MultiTrack'));\n                for (i = 0; i < geotypes.length; i++) {\n                    geomNodes = get(root, geotypes[i]);\n                    if (geomNodes) {\n                        for (j = 0; j < geomNodes.length; j++) {\n                            geomNode = geomNodes[j];\n                            if (geotypes[i] == 'Point') {\n                                geoms.push({\n                                    type: 'Point',\n                                    coordinates: coord1(nodeVal(get1(geomNode, 'coordinates')))\n                                });\n                            } else if (geotypes[i] == 'LineString') {\n                                geoms.push({\n                                    type: 'LineString',\n                                    coordinates: coord(nodeVal(get1(geomNode, 'coordinates')))\n                                });\n                            } else if (geotypes[i] == 'Polygon') {\n                                var rings = get(geomNode, 'LinearRing'),\n                                    coords = [];\n                                for (k = 0; k < rings.length; k++) {\n                                    coords.push(coord(nodeVal(get1(rings[k], 'coordinates'))));\n                                }\n                                geoms.push({\n                                    type: 'Polygon',\n                                    coordinates: coords\n                                });\n                            } else if (geotypes[i] == 'Track' ||\n                                geotypes[i] == 'gx:Track') {\n                                geoms.push({\n                                    type: 'LineString',\n                                    coordinates: gxCoords(geomNode)\n                                });\n                            }\n                        }\n                    }\n                }\n                return geoms;\n            }\n            function getPlacemark(root) {\n                var geoms = getGeometry(root), i, properties = {},\n                    name = nodeVal(get1(root, 'name')),\n                    styleUrl = nodeVal(get1(root, 'styleUrl')),\n                    description = nodeVal(get1(root, 'description')),\n                    timeSpan = get1(root, 'TimeSpan'),\n                    extendedData = get1(root, 'ExtendedData'),\n                    lineStyle = get1(root, 'LineStyle'),\n                    polyStyle = get1(root, 'PolyStyle');\n\n                if (!geoms.length) return [];\n                if (name) properties.name = name;\n                if (styleUrl && styleIndex[styleUrl]) {\n                    properties.styleUrl = styleUrl;\n                    properties.styleHash = styleIndex[styleUrl];\n                }\n                if (description) properties.description = description;\n                if (timeSpan) {\n                    var begin = nodeVal(get1(timeSpan, 'begin'));\n                    var end = nodeVal(get1(timeSpan, 'end'));\n                    properties.timespan = { begin: begin, end: end };\n                }\n                if (lineStyle) {\n                    var linestyles = kmlColor(nodeVal(get1(lineStyle, 'color'))),\n                        color = linestyles[0],\n                        opacity = linestyles[1],\n                        width = parseFloat(nodeVal(get1(lineStyle, 'width')));\n                    if (color) properties.stroke = color;\n                    if (!isNaN(opacity)) properties['stroke-opacity'] = opacity;\n                    if (!isNaN(width)) properties['stroke-width'] = width;\n                }\n                if (polyStyle) {\n                    var polystyles = kmlColor(nodeVal(get1(polyStyle, 'color'))),\n                        pcolor = polystyles[0],\n                        popacity = polystyles[1],\n                        fill = nodeVal(get1(polyStyle, 'fill')),\n                        outline = nodeVal(get1(polyStyle, 'outline'));\n                    if (pcolor) properties.fill = pcolor;\n                    if (!isNaN(popacity)) properties['fill-opacity'] = popacity;\n                    if (fill) properties['fill-opacity'] = fill === \"1\" ? 1 : 0;\n                    if (outline) properties['stroke-opacity'] = outline === \"1\" ? 1 : 0;\n                }\n                if (extendedData) {\n                    var datas = get(extendedData, 'Data'),\n                        simpleDatas = get(extendedData, 'SimpleData');\n\n                    for (i = 0; i < datas.length; i++) {\n                        properties[datas[i].getAttribute('name')] = nodeVal(get1(datas[i], 'value'));\n                    }\n                    for (i = 0; i < simpleDatas.length; i++) {\n                        properties[simpleDatas[i].getAttribute('name')] = nodeVal(simpleDatas[i]);\n                    }\n                }\n                return [{\n                    type: 'Feature',\n                    geometry: (geoms.length === 1) ? geoms[0] : {\n                        type: 'GeometryCollection',\n                        geometries: geoms\n                    },\n                    properties: properties\n                }];\n            }\n            return gj;\n        },\n        gpx: function(doc) {\n            var i,\n                tracks = get(doc, 'trk'),\n                routes = get(doc, 'rte'),\n                waypoints = get(doc, 'wpt'),\n                // a feature collection\n                gj = fc(),\n                feature;\n            for (i = 0; i < tracks.length; i++) {\n                feature = getTrack(tracks[i]);\n                if (feature) gj.features.push(feature);\n            }\n            for (i = 0; i < routes.length; i++) {\n                feature = getRoute(routes[i]);\n                if (feature) gj.features.push(feature);\n            }\n            for (i = 0; i < waypoints.length; i++) {\n                gj.features.push(getPoint(waypoints[i]));\n            }\n            function getPoints(node, pointname) {\n                var pts = get(node, pointname), line = [],\n                    l = pts.length;\n                if (l < 2) return;  // Invalid line in GeoJSON\n                for (var i = 0; i < l; i++) {\n                    line.push(coordPair(pts[i]));\n                }\n                return line;\n            }\n            function getTrack(node) {\n                var segments = get(node, 'trkseg'), track = [], line;\n                for (var i = 0; i < segments.length; i++) {\n                    line = getPoints(segments[i], 'trkpt');\n                    if (line) track.push(line);\n                }\n                if (track.length === 0) return;\n                return {\n                    type: 'Feature',\n                    properties: getProperties(node),\n                    geometry: {\n                        type: track.length === 1 ? 'LineString' : 'MultiLineString',\n                        coordinates: track.length === 1 ? track[0] : track\n                    }\n                };\n            }\n            function getRoute(node) {\n                var line = getPoints(node, 'rtept');\n                if (!line) return;\n                return {\n                    type: 'Feature',\n                    properties: getProperties(node),\n                    geometry: {\n                        type: 'LineString',\n                        coordinates: line\n                    }\n                };\n            }\n            function getPoint(node) {\n                var prop = getProperties(node);\n                prop.sym = nodeVal(get1(node, 'sym'));\n                return {\n                    type: 'Feature',\n                    properties: prop,\n                    geometry: {\n                        type: 'Point',\n                        coordinates: coordPair(node)\n                    }\n                };\n            }\n            function getProperties(node) {\n                var meta = ['name', 'desc', 'author', 'copyright', 'link',\n                            'time', 'keywords'],\n                    prop = {},\n                    k;\n                for (k = 0; k < meta.length; k++) {\n                    prop[meta[k]] = nodeVal(get1(node, meta[k]));\n                }\n                return clean(prop);\n            }\n            return gj;\n        }\n    };\n    return t;\n})();\n\nif (typeof module !== 'undefined') module.exports = toGeoJSON;\n","(function (window, PublicaMundi, L) {\r\n    if (typeof PublicaMundi === 'undefined') {\r\n        return;\r\n    }\r\n\r\n    if (typeof L === 'undefined') {\r\n        return;\r\n    }\r\n\r\n\r\n    _unproject = function (location) {\r\n                var projected = L.point(location[0], location[1]).divideBy(6378137);\r\n                return L.CRS.EPSG3857.projection.unproject(projected);\r\n            };\r\n    _project = function(x) {\r\n        center = L.CRS.EPSG3857.projection.project(x).multiplyBy(6378137);\r\n        return center;\r\n    };\r\n\r\n    PublicaMundi.define('PublicaMundi.Leaflet');    \r\n        \r\n    PublicaMundi.Leaflet.Map = PublicaMundi.Class(PublicaMundi.Map, {\r\n        // Attempt to unify info overlays\r\n        addOverlay: function(element) {\r\n            var popup = new L.popup({className:'hideparent', closeButton:false}).setLatLng(this._map.getCenter());\r\n            popup.setContent(element);\r\n            popup.addTo(this._map);\r\n            this._popup = popup;\r\n            return popup;\r\n        },\r\n        setOverlayPosition: function(popup, pixel){\r\n            var npx = [ pixel[0]/(6378137), pixel[1]/(6378137) ];\r\n            popup.setLatLng(npx);\r\n            //popup.setPosition(pixel);\r\n        },\r\n        initialize: function (options) {\r\n            PublicaMundi.Map.prototype.initialize.call(this, options);\r\n               \r\n                        \r\n            if ((PublicaMundi.isClass('L.Map')) && (options instanceof L.Map)) {\r\n                this._map = options;\r\n            } else {\r\n                // TODO : Resolve projection\r\n                this._map = L.map(options.target, {\r\n                    // TODO : Add projection\r\n                    center: _unproject(options.center),\r\n                    zoom: options.zoom,\r\n                    maxZoom: options.maxZoom,\r\n                    minZoom: options.minZoom,\r\n                    attributionControl: false,\r\n                    closePopupOnClick: false\r\n\r\n                });\r\n            }\r\n            this._listen();\r\n            if ((typeof options.layers !== 'undefined') && (PublicaMundi.isArray(options.layers))) {\r\n                for (var index = 0; index < options.layers.length; index++) {\r\n                    this.createLayer(options.layers[index]);\r\n                }\r\n            }\r\n        },\r\n        setCenter: function (x, y) {\r\n            if (PublicaMundi.isArray(x)) {\r\n                this._map.setView(_unproject(x), this._map.getZoom());\r\n            } else {\r\n                this._map.setView(_unproject([x, y]), this._map.getZoom());\r\n            }\r\n        },\r\n        getCenter: function () {\r\n            var center = this._map.getCenter();\r\n            center = L.CRS.EPSG3857.projection.project(center).multiplyBy(6378137);\r\n            return [center.x, center.y];\r\n        },\r\n        setZoom: function (z) {\r\n            this._map.setView(this._map.getCenter(), z);\r\n        },\r\n        getZoom: function () {\r\n            return this._map.getZoom();\r\n        },\r\n        getProjection: function () {\r\n            return 'EPSG:3857';\r\n        },\r\n        getTarget: function () {\r\n            return this._map.getTarget();\r\n        },\r\n        addLayer: function (layer) {\r\n            if (layer._options.visible !== false){\r\n            this._map.addLayer(layer.getLayer());\r\n            }\r\n            layer._addToControl();\r\n            layer.update();\r\n        },\r\n        setExtent: function (extent, proj){\r\n            if (extent === null) {\r\n                return;\r\n            }\r\n            var transformation;    \r\n            if (proj == 'EPSG:4326') {\r\n                    transformation = extent;\r\n            }\r\n            else if (proj == 'EPSG:3857'){\r\n                transformation = _unproject(extent);\r\n            }\r\n            else {\r\n                transformation = null;\r\n            }\r\n\r\n            var southWest =  new L.LatLng(transformation[1], transformation[0]);\r\n            var northEast = new L.LatLng(transformation[3], transformation[2]);\r\n            this._map.fitBounds(new L.LatLngBounds(southWest,northEast)); \r\n        },\r\n        _listen: function() { \r\n            var map = this;\r\n            var idx = 0;\r\n            //this._setLayerControl();\r\n\r\n            this._map.on('moveend', function() {\r\n                \r\n                map._setViewBox();\r\n                var layers = map.getLayers();\r\n                //update each layer on mouse pan or zoom\r\n                $.each(layers, function(idx, layer) {\r\n                    layer.update(); \r\n                });\r\n\r\n            });\r\n\r\n        },\r\n\r\n\r\n        _setViewBox: function() {\r\n                var southWest = _project(this._map.getBounds().getSouthWest());\r\n                var northEast = _project(this._map.getBounds().getNorthEast());\r\n                this._viewbox = southWest.x+','+southWest.y+','+northEast.x+','+northEast.y;\r\n\r\n        },\r\n        setLayerControl: function() {\r\n            this._control = new L.control.layers();\r\n            this._control.addTo(this._map);\r\n            \r\n            return this._control;\r\n        },\r\n        \r\n    });\r\n\r\n    PublicaMundi.locator.register('PublicaMundi.Map', PublicaMundi.Leaflet.Map);\r\n})(window, window.PublicaMundi, L);\r\n","/// <reference path=\"../../../Leaflet/leaflet-src.js\" />\r\n\r\n/// <reference path=\"../../PublicaMundi.js\" />\r\n/// <reference path=\"../Layer.js\" />\r\n\r\n(function (global, PublicaMundi, L) {\r\n    if (typeof PublicaMundi === 'undefined') {\r\n        return;\r\n    }\r\n\r\n    if (typeof L === 'undefined') {\r\n        return;\r\n    }\r\n\r\n    // Helpers\r\n\r\n    var extractBbox = function (bbox) {\r\n        var bboxtemp= null;\r\n        $.each(bbox, function(idx, at) {\r\n            at = at['@attributes'];\r\n            if(at.CRS == \"EPSG:4326\") {\r\n                bboxtemp = [ parseFloat(at.miny), parseFloat(at.minx), parseFloat(at.maxy) , parseFloat(at.maxx) ];\r\n            }\r\n            else if(at.CRS == \"CRS:84\") {\r\n                bboxtemp = [ parseFloat(at.minx), parseFloat(at.miny), parseFloat(at.maxx), parseFloat(at.maxy) ];\r\n                }\r\n        });\r\n        return bboxtemp;\r\n    };\r\n\r\n\r\n    PublicaMundi.define('PublicaMundi.Leaflet.Layer');\r\n\r\n    PublicaMundi.Leaflet.Layer.WMS = PublicaMundi.Class(PublicaMundi.Layer, {\r\n        _addToControl: function() { \r\n            var map = this._map;\r\n            var title = this._options.title;\r\n              if (map.getLayerControl()){\r\n                map.getLayerControl().addOverlay(this._layer, title);\r\n                }\r\n            },\r\n        \r\n        //fitToMap: function() {\r\n        //    var layer = this;\r\n            //this._layer.on('load', function() {\r\n            //    layer.getMap().setExtent(layer._extent, 'EPSG:4326');\r\n            //});\r\n        //},\r\n        fitToMap: function() {\r\n            \r\n            ///\r\n            \r\n            var layer = this;\r\n            var options = this._options;\r\n            \r\n\r\n            if (typeof options.bbox === \"undefined\"){                    \r\n                    console.log('Getting Capabilities...');\r\n                    \r\n                    //$.ajax(options.url+\"?service=WFS&request=GetCapabilities\").then(function(response) {\r\n                    $.ajax(options.url+'?service=WMS&request=GetCapabilities').then(function(response) {\r\n                            \r\n                        response = xmlToJson(response);\r\n                        console.log(response);\r\n                        var candidates = response.WMS_Capabilities.Capability.Layer.Layer;\r\n                        $.each(candidates, function(idx, candidate) {\r\n                            if (candidate.Name){\r\n                            if (candidate.Name[\"#text\"]){\r\n                            if (candidate.Name[\"#text\"] == options.params.layers){\r\n                                    var bbox = extractBbox(candidate.BoundingBox);\r\n                                    \r\n                                    layer._extent = bbox;\r\n                                    layer._layer.on('load', function() {\r\n                                        layer.getMap().setExtent(layer._extent, 'EPSG:4326');\r\n                                    });\r\n\r\n                                    //layer._layer.once('postcompose', function() {\r\n                                    //    layer.getMap().setExtent(layer._extent, 'EPSG:4326');\r\n                                    //});\r\n                                    return false;\r\n                                    }}}\r\n                   });\r\n                   });\r\n            }\r\n\r\n            \r\n            ////\r\n\r\n            else{\r\n\r\n            console.log('Bbox option found');\r\n            \r\n            this._layer.once('postcompose', function() {\r\n                layer.getMap().setExtent(layer._extent, 'EPSG:4326');\r\n            });\r\n            }\r\n               \r\n\r\n        },\r\n\r\n\r\n        initialize: function (options) {\r\n            PublicaMundi.Layer.prototype.initialize.call(this, options);\r\n            this._layer = L.tileLayer.wms(options.url, {\r\n                layers: options.params.layers,\r\n                format: 'image/png',\r\n                transparent: true\r\n            });\r\n        },\r\n    });\r\n\r\n    PublicaMundi.registry.registerLayerType({\r\n        layer: PublicaMundi.LayerType.WMS,\r\n        framework: PublicaMundi.Leaflet.Framework,\r\n        type: 'PublicaMundi.Layer.WMS',\r\n        factory: PublicaMundi.Leaflet.Layer.WMS\r\n    });\r\n})(window, window.PublicaMundi, L);\r\n","/// <reference path=\"../../../Leaflet/leaflet-src.js\" />\r\n/// <reference path=\"../../PublicaMundi.js\" />\r\n/// <reference path=\"../Layer.js\" />\r\n\r\n(function (global, PublicaMundi, L) {\r\n\r\n    if (typeof PublicaMundi === 'undefined') {\r\n        return;\r\n    }\r\n\r\n    if (typeof L === 'undefined') {\r\n        return;\r\n    }\r\n\r\n    PublicaMundi.define('PublicaMundi.Leaflet.Layer');\r\n\r\n    PublicaMundi.Leaflet.Layer.WFS = PublicaMundi.Class(PublicaMundi.Layer, {\r\n        _addToControl: function() {\r\n            var map = this._map;\r\n            var title = this._options.title;\r\n            if (map.getLayerControl()){\r\n                map.getLayerControl().addOverlay(this._layer, title);\r\n            }\r\n        },\r\n        \r\n        // fitToMap: function() {\r\n       //     var layer = this;\r\n            //this._layer.once('layeradd', function(){\r\n            //    this._map.setExtent(layer._extent, 'EPSG:4326');\r\n            //});\r\n       // },\r\n        fitToMap: function() {\r\n        \r\n            var layer = this;\r\n            var options = this._options;\r\n\r\n            if (typeof options.bbox === \"undefined\"){                    \r\n                    console.log('Getting Capabilities...');\r\n                    \r\n                    $.ajax(options.url+\"?service=WFS&request=GetCapabilities\").then(function(response) {\r\n                            \r\n                        response = xmlToJson(response);\r\n                        var candidates = response['wfs:WFS_Capabilities'].FeatureTypeList.FeatureType;\r\n                        $.each(candidates, function(idx, candidate) {\r\n                            if (candidate.Name){\r\n                            if (candidate.Name[\"#text\"]){\r\n                            if (candidate.Name[\"#text\"] == options.params.layers){\r\n                                    var bbox = candidate.WGS84BoundingBox;\r\n                                    var lc = null;\r\n                                    var uc = null;\r\n                                    if (typeof bbox === \"undefined\") {\r\n                                        bbox = candidate[\"ows:WGS84BoundingBox\"];\r\n                                        lc = bbox['ows:LowerCorner'][\"#text\"];\r\n                                        uc = bbox['ows:UpperCorner'][\"#text\"];\r\n                                    }\r\n                                    else {\r\n                                        lc = bbox.LowerCorner[\"#text\"];\r\n                                        uc = bbox.UpperCorner[\"#text\"];\r\n                                    }\r\n                                    \r\n                                    if (typeof bbox !== \"undefined\") {\r\n                                        lc = lc.split(' ');\r\n                                        uc = uc.split(' ');\r\n                                        bboxfloat = [ parseFloat(lc[0]), parseFloat(lc[1]), parseFloat(uc[0]), parseFloat(uc[1]) ];\r\n                                    }\r\n                                    layer._extent = bboxfloat;\r\n                                    layer._layer.once('layeradd', function() {\r\n                                            layer.getMap().setExtent(layer._extent, 'EPSG:4326');\r\n                                    });\r\n\r\n                                    return false;\r\n                                    }}}\r\n                   });\r\n                   });\r\n            }\r\n            else{\r\n\r\n            console.log('Bbox option found');\r\n            layer._layer._map.once('layeradd', function() {\r\n                layer.getMap().setExtent(layer._extent, 'EPSG:4326');\r\n            });\r\n\r\n            //this._layer.once('postcompose', function() {\r\n            //    layer.getMap().setExtent(layer._extent, 'EPSG:4326');\r\n            //});\r\n            }\r\n\r\n        },\r\n\r\n\r\n\r\n        update: function() { \r\n            //Set initial viewbox\r\n            if (this._map._getViewBox()=='0,0,0,0'){\r\n                this._map._setViewBox();\r\n                }\r\n            var bbox = this._map._getViewBox();\r\n            $.ajax({\r\n                type: \"GET\",\r\n                url: this._options.url + '?service=WFS&request=GetFeature&typename=' + this._options.params.layers + '&srsname=EPSG:4326' + '&outputFormat=json' +'&bbox=' + bbox + ',EPSG:3857',\r\n                dataType: 'json',\r\n                context: this,\r\n                success: function (response) {\r\n                    console.log('success');\r\n                    this._layer.clearLayers();\r\n                    this._layer.addData(response);\r\n\r\n\r\n                },\r\n                failure: function(response){\r\n                    console.log('failure');\r\n                    }\r\n\r\n            });\r\n        },\r\n        initialize: function (options) {\r\n            PublicaMundi.Layer.prototype.initialize.call(this, options);\r\n            \r\n            function highlightFeature(e) {\r\n                   var layer = e.target;\r\n\r\n                   layer.setStyle({\r\n                        opacity: 1,\r\n                        weight: 3,\r\n                        color: '#3399CC',\r\n                   });\r\n                   if (!L.Browser.ie && !L.Browser.opera) {\r\n                        layer.bringToFront();\r\n                   }\r\n                }\r\n            var auto = this;\r\n            function resetHighlight(e) {\r\n                auto._layer.resetStyle(auto._map._highlight);\r\n            }\r\n\r\n\r\n            var onClick = null;\r\n            if (PublicaMundi.isFunction(options.click)) {\r\n                onClick = function (e) {\r\n                    options.click(auto, [e.target.feature.properties], [e.latlng.lat * (6378137), e.latlng.lng* (6378137)]);\r\n                \r\n                if (map._highlight){\r\n                    if (map._highlight !== e.target){\r\n                        resetHighlight(e);\r\n                        map._highlight = e.target;\r\n                        highlightFeature(e);\r\n                    }\r\n                    else{\r\n                    }\r\n                }\r\n                else{\r\n                    map._highlight = e.target;\r\n                    highlightFeature(e);\r\n                }\r\n                \r\n                };\r\n            }\r\n            this._layer = L.geoJson(null, {\r\n                style: {\r\n                    color: '#3399CC',\r\n                    weight: 1.25,\r\n                    opacity: 1,\r\n                    fillColor: '#FFFFFF',\r\n                    fillOpacity: 0.4\r\n                }, \r\n                    pointToLayer: function (feature, latlng) {\r\n                    return L.circleMarker(latlng, {\r\n                        radius: 5,\r\n                        fillColor: '#FFFFFF',\r\n                        fillOpacity: 0.4,\r\n                        color: \"#3399CC\",\r\n                        weight: 1.25,\r\n                        opacity: 1\r\n                    });\r\n                }, \r\n\r\n                onEachFeature: function onEachFeature(feature, layer) {\r\n                    if (PublicaMundi.isFunction(onClick)) {\r\n                        layer.on({\r\n                            click: onClick\r\n                        });\r\n                    //if (feature.properties.name){\r\n                    //    layer.bindPopup(feature.properties.name);    \r\n                   // }\r\n                    //else {\r\n                    //    layer.bindPopup(JSON.stringify(feature));\r\n                    //}\r\n                    }\r\n\r\n                },\r\n                //filter: function(feature, layer) {\r\n                    \r\n                //    return options.visible;\r\n                //    }\r\n\r\n            }); \r\n            \r\n        }\r\n\r\n    });\r\n\r\n    \r\n        PublicaMundi.registry.registerLayerType({\r\n        layer: PublicaMundi.LayerType.WFS,\r\n        framework: PublicaMundi.Leaflet.Framework,\r\n        type: 'PublicaMundi.Layer.WFS',\r\n        factory: PublicaMundi.Leaflet.Layer.WFS\r\n    });\r\n})(window, window.PublicaMundi, L);\r\n","(function (global, PublicaMundi, L) {\r\n    if (typeof PublicaMundi === 'undefined') {\r\n        return;\r\n    }\r\n\r\n    if (typeof L === 'undefined') {\r\n        return;\r\n    }\r\n\r\n    PublicaMundi.define('PublicaMundi.Leaflet.Layer');\r\n\r\n    PublicaMundi.Leaflet.Layer.Tile = PublicaMundi.Class(PublicaMundi.Layer, {\r\n        initialize: function (options) {\r\n            PublicaMundi.Layer.prototype.initialize.call(this, options);\r\n\r\n            this._layer = L.tileLayer(options.url);\r\n        },\r\n        _addToControl: function() { \r\n            if (this._map.getLayerControl()){\r\n            this._map.getLayerControl().addBaseLayer(this._layer, this._options.title);\r\n            }\r\n        },\r\n\r\n    });\r\n\r\n    PublicaMundi.registry.registerLayerType({\r\n        layer: PublicaMundi.LayerType.TILE,\r\n        framework: PublicaMundi.Leaflet.Framework,\r\n        type: 'PublicaMundi.Layer.Tile',\r\n        factory: PublicaMundi.Leaflet.Layer.Tile\r\n    });\r\n})(window, window.PublicaMundi, L);\r\n","/// <reference path=\"../../../jQuery/jquery-2.1.0.intellisense.js\" />\r\n/// <reference path=\"../../../Leaflet/leaflet-src.js\" />\r\n\r\n/// <reference path=\"../../PublicaMundi.js\" />\r\n/// <reference path=\"../Layer.js\" />\r\n\r\n(function (global, PublicaMundi, L, $) {\r\n    if (typeof PublicaMundi === 'undefined') {\r\n        return;\r\n    }\r\n\r\n    if (typeof L === 'undefined') {\r\n        return;\r\n    }\r\n    \r\n    PublicaMundi.define('PublicaMundi.Leaflet.Layer');\r\n\r\n    PublicaMundi.Leaflet.Layer.KML = PublicaMundi.Class(PublicaMundi.Layer, {\r\n        //TODO: not yet supported\r\n        fitToMap: function() {\r\n\r\n        },\r\n\r\n        \r\n       _addToControl: function() { \r\n\r\n            if (this._map.getLayerControl()){\r\n                this._map.getLayerControl().addOverlay(this._layer, this._options.title);\r\n                }\r\n            },\r\n \r\n        initialize: function (options) {\r\n            PublicaMundi.Layer.prototype.initialize.call(this, options);\r\n\r\n            if (!PublicaMundi.isDefined(options.projection)) {\r\n                // TODO : Resolve projection / reproject    \r\n            }\r\n            \r\n            function highlightFeature(e) {\r\n                   var layer = e.target;\r\n\r\n                   layer.setStyle({\r\n                        opacity: 1,\r\n                        weight: 3,\r\n                        color: '#3399CC',\r\n                   });\r\n                   if (!L.Browser.ie && !L.Browser.opera) {\r\n                        layer.bringToFront();\r\n                   }\r\n                }\r\n            var auto = this;\r\n            function resetHighlight(e) {\r\n                auto._layer.resetStyle(auto._map._highlight);\r\n            }\r\n\r\n            var onClick = null;\r\n            if (PublicaMundi.isFunction(options.click)) {\r\n               \r\n                onClick = function (e) {\r\n                    options.click(auto, [e.target.feature.properties], [e.latlng.lat * (6378137), e.latlng.lng* (6378137)]);\r\n                \r\n                if (map._highlight){\r\n                    if (map._highlight !== e.target){\r\n                        resetHighlight(e);\r\n                        map._highlight = e.target;\r\n                        highlightFeature(e);\r\n                    }\r\n                    else{\r\n                    }\r\n                }\r\n                else{\r\n                    map._highlight = e.target;\r\n                    highlightFeature(e);\r\n                }\r\n                \r\n                \r\n                };\r\n            }\r\n\r\n            this._layer = L.geoJson(null, {\r\n                style: {\r\n                    color: '#3399CC',\r\n                    weight: 1.25,\r\n                    opacity: 1,\r\n                    fillColor: '#FFFFFF',\r\n                    fillOpacity: 0.4\r\n                }, pointToLayer: function (feature, latlng) {\r\n                    return L.circleMarker(latlng, {\r\n                        radius: 5,\r\n                        fillColor: '#FFFFFF',\r\n                        fillOpacity: 0.4,\r\n                        color: \"#3399CC\",\r\n                        weight: 1.25,\r\n                        opacity: 1\r\n                    });\r\n                },\r\n                onEachFeature: function onEachFeature(feature, layer) {\r\n                    if (PublicaMundi.isFunction(onClick)) {\r\n                        layer.on({\r\n                            click: onClick\r\n                        });\r\n                        //layer.bindPopup(feature.properties.name);    \r\n                    }\r\n                },\r\n         \r\n            \r\n               async: true,\r\n                    });\r\n\r\n            $.ajax({\r\n                type: \"GET\",\r\n                url: options.url,\r\n                dataType: 'xml',\r\n                context: this,\r\n                success: function (response) {\r\n                    // Converting KML to geojson and handling as json\r\n                    var test = toGeoJSON.kml(response);\r\n                    this._layer.addData(test);\r\n\r\n                    // TODO: same as GeoJson\r\n                 \r\n                    var currextent = this._layer.getBounds();\r\n                    var southWest = currextent.getSouthWest();\r\n                    var northEast = currextent.getNorthEast();\r\n                    this._extent = [southWest.lng, southWest.lat, northEast.lng, northEast.lat];\r\n                    \r\n                    //this._map.setExtent(this._extent, 'EPSG:4326');\r\n\r\n\r\n                }\r\n            });\r\n        }\r\n    });\r\n    \r\n    PublicaMundi.registry.registerLayerType({\r\n        layer: PublicaMundi.LayerType.KML,\r\n        framework: PublicaMundi.Leaflet.Framework,\r\n        type: 'PublicaMundi.Layer.KML',\r\n        factory: PublicaMundi.Leaflet.Layer.KML\r\n    });\r\n\r\n    // Add utility methods\r\n    if (PublicaMundi.isDefined(PublicaMundi.Map)) {\r\n        PublicaMundi.Map.prototype.KML = function (options) {\r\n            //console.log('helper?');\r\n            switch (typeof options) {\r\n\r\n            }\r\n            options.type = options.type || PublicaMundi.LayerType.KML;\r\n\r\n            this.createLayer(options);\r\n        };\r\n    }\r\n})(window, window.PublicaMundi, L, jQuery);\r\n","// <reference path=\"../../../jQuery/jquery-2.1.0.intellisense.js\" />\r\n/// <reference path=\"../../../Leaflet/leaflet-src.js\" />\r\n\r\n/// <reference path=\"../../PublicaMundi.js\" />\r\n/// <reference path=\"../Layer.js\" />\r\n\r\n(function (global, PublicaMundi, L, $) {\r\n    if (typeof PublicaMundi === 'undefined') {\r\n        return;\r\n    }\r\n\r\n    if (typeof L === 'undefined') {\r\n        return;\r\n    }\r\n    \r\n\r\n    PublicaMundi.define('PublicaMundi.Leaflet.Layer');\r\n    var popup;\r\n    PublicaMundi.Leaflet.Layer.GeoJson = PublicaMundi.Class(PublicaMundi.Layer, {\r\n        _addToControl: function() { \r\n            if (this._map.getLayerControl()){\r\n                this._map.getLayerControl().addOverlay(this._layer, this._options.title);\r\n                }\r\n            },\r\n        // TODO: not yet supported\r\n        fitToMap: function() {\r\n            var layer = this;\r\n\r\n            layer._layer.on('layeradd', function() {\r\n                latlngbounds = layer._layer.getBounds();\r\n                var bbox = [latlngbounds._southWest.lng, latlngbounds._southWest.lat, latlngbounds._northEast.lng, latlngbounds._northEast.lat];\r\n                if (layer._extent){\r\n                    if (bbox[0] < layer._extent[0]){\r\n                        layer._extent[0] = bbox[0];\r\n                        }\r\n                    if (bbox[1] < layer._extent[1]){\r\n                        layer._extent[1] = bbox[1];\r\n                        }\r\n                    if (bbox[2] > layer._extent[2]){\r\n                        layer._extent[2] = bbox[2];\r\n                        }\r\n                    if (bbox[3] > layer._extent[3]){\r\n                        layer._extent[3] = bbox[3];\r\n                        }\r\n                }\r\n                else{\r\n                    //layer._extent = bbox;\r\n                }\r\n                layer.getMap().setExtent(bbox, 'EPSG:4326');\r\n\r\n                //layer.getMap()._map.fitBounds();\r\n            });\r\n\r\n        },\r\n        initialize: function (options) {\r\n            PublicaMundi.Layer.prototype.initialize.call(this, options);\r\n\r\n            function highlightFeature(e) {\r\n                   var layer = e.target;\r\n\r\n                   layer.setStyle({\r\n                        opacity: 1,\r\n                        weight: 3,\r\n                        color: '#3399CC',\r\n                   });\r\n                   if (!L.Browser.ie && !L.Browser.opera) {\r\n                        layer.bringToFront();\r\n                   }\r\n                }\r\n            var auto = this;\r\n            function resetHighlight(e) {\r\n                auto._layer.resetStyle(auto._map._highlight);\r\n            }\r\n\r\n            if (!PublicaMundi.isDefined(options.projection)) {\r\n                // TODO : Resolve projection / reproject    \r\n            }\r\n\r\n            var onClick = null;\r\n            if (PublicaMundi.isFunction(options.click)) {\r\n                onClick = function (e) {\r\n                    options.click(auto, [e.target.feature.properties], [e.latlng.lat * (6378137), e.latlng.lng* (6378137)]);\r\n                \r\n                // Highlight feature\r\n                if (map._highlight){\r\n                    if (map._highlight !== e.target){\r\n                        resetHighlight(e);\r\n                        map._highlight = e.target;\r\n                        highlightFeature(e);\r\n                    }\r\n                    else{\r\n                    }\r\n                }\r\n                else{\r\n                    map._highlight = e.target;\r\n                    highlightFeature(e);\r\n                }\r\n                               \r\n                };\r\n                }\r\n            \r\n            this._layer = L.geoJson(null, {\r\n\r\n                style: {\r\n                    color: '#3399CC',\r\n                    weight: 1.25,\r\n                    opacity: 1,\r\n                    fillColor: '#FFFFFF',\r\n                    fillOpacity: 0.4\r\n                }, \r\n                pointToLayer: function (feature, latlng) {\r\n                    return L.circleMarker(latlng, {\r\n                        radius: 5,\r\n                        fillColor: '#FFFFFF',\r\n                        fillOpacity: 0.4,\r\n                        color: \"#3399CC\",\r\n                        weight: 1.25,\r\n                        opacity: 1\r\n                    }); \r\n                    }, \r\n                 onEachFeature: function onEachFeature(feature, layer) {\r\n                    if (PublicaMundi.isFunction(onClick)) {\r\n                        layer.on({\r\n                            click: onClick\r\n                        });\r\n                        //layer.bringToFront();\r\n                    //layer.bindPopup(feature.properties.name);    \r\n                    }\r\n                },\r\n                \r\n            });\r\n\r\n            $.ajax({                \r\n                type: \"GET\",\r\n                url: options.url,\r\n                dataType: 'json',\r\n                context: this,\r\n                success: function (response) {\r\n                    this._layer.addData(response);\r\n                    \r\n                    // TODO: the following needs to be executed in fitToMap\r\n                    // Leaflet fires layer add event for each feature in geojson\r\n                    var currextent = this._layer.getBounds();\r\n                    var southWest = currextent.getSouthWest();\r\n                    var northEast = currextent.getNorthEast();\r\n                    this._extent = [southWest.lng, southWest.lat, northEast.lng, northEast.lat];\r\n                    \r\n                    //this._map.setExtent(this._extent, 'EPSG:4326');\r\n\r\n                }\r\n            });\r\n            \r\n            \r\n        },\r\n\r\n    });\r\n\r\n    PublicaMundi.registry.registerLayerType({\r\n        layer: PublicaMundi.LayerType.GeoJSON,\r\n        framework: PublicaMundi.Leaflet.Framework,\r\n        type: 'PublicaMundi.Layer.GeoJson',\r\n        factory: PublicaMundi.Leaflet.Layer.GeoJson\r\n    });\r\n\r\n    // Add utility methods\r\n    if (PublicaMundi.isDefined(PublicaMundi.Map)) {\r\n        PublicaMundi.Map.prototype.geoJSON = function (options) {\r\n            switch (typeof options) {\r\n\r\n            }\r\n            options.type = options.type || PublicaMundi.LayerType.GeoJSON;\r\n\r\n            this.createLayer(options);\r\n        };\r\n    }\r\n})(window, window.PublicaMundi, L, jQuery);\r\n"]}